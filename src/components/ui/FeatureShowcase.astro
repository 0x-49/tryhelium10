---
interface Feature {
  title: string;
  description: string;
}

interface Props {
  title: string;
  description: string;
  features: Feature[];
  image?: string;
  reversed?: boolean;
}

const { title, description, features, image, reversed = false }: Props = Astro.props;
---

<div class:list={["py-16 relative overflow-hidden", reversed ? "bg-gray-50" : "bg-white"]}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class:list={["grid grid-cols-1 lg:grid-cols-2 gap-12 items-center", reversed ? "lg:flex-row-reverse" : ""]}>
      <div class="relative z-10">
        <h3 class="text-3xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-purple-600 text-transparent bg-clip-text">
          {title}
        </h3>
        <p class="text-xl text-gray-600 mb-8">{description}</p>
        <ul class="space-y-4">
          {features.map((feature: Feature) => (
            <li class="flex items-start">
              <div class="flex-shrink-0">
                <div class="flex items-center justify-center h-12 w-12 rounded-md bg-gradient-to-r from-blue-500 to-purple-500 text-white">
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                  </svg>
                </div>
              </div>
              <div class="ml-4">
                <h4 class="text-lg font-medium text-gray-900">{feature.title}</h4>
                <p class="mt-2 text-base text-gray-500">{feature.description}</p>
              </div>
            </li>
          ))}
        </ul>
      </div>
      <div class:list={["relative", reversed ? "lg:order-first" : ""]}>
        <div class="absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-2xl transform rotate-3"></div>
        {image && (
          <img
            src={image}
            alt={title}
            class="relative rounded-2xl shadow-lg transform hover:scale-[1.02] transition-transform duration-300"
            loading="lazy"
          />
        )}
      </div>
    </div>
  </div>
</div>
